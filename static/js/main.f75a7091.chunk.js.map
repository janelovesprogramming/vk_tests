{"version":3,"sources":["components/Tasks.js","components/AddTask.js","components/EditTask.js","components/Question.js","components/QuestionCount.js","components/AnswerOption.js","components/Quiz.js","components/Result.js","App.js","routes.js","index.js","create-router.js"],"names":["Tasks","this","props","tasks","router","setCurrentTaskId","deleteTask","removable","osname","platform","style","paddingTop","ANDROID","map","task","index","multiline","expandable","key","onRemove","id","onClick","navigate","name","React","Component","AddTask","onClickAddTask","addTask","state","text","setState","error","navigateToDefault","onChangeNameTask","e","target","value","onChangeTextTask","left","title","onChange","type","placeholder","vertical","float","className","size","EditTask","onClickEditTask","editTask","Question","content","QuestionCount","counter","total","AnswerOption","checked","answerType","answer","disabled","onAnswerSelected","htmlFor","answerContent","Quiz","question","questionId","questionTotal","answerOptions","Result","quizResult","App","onChangeSearch","search","length","currentTaskId","newTask","newTasks","updateCategory","r","alert","answersCount","result","allquestions","handleAnswerSelected","bind","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","answersCountKeys","Object","keys","answersCountValues","maxAnswerCount","max","apply","filter","setUserAnswer","currentTarget","setTimeout","setNextQuestion","setResults","getResults","route","activeView","activePanel","renderResult","renderQuiz","defaultChecked","theme","toLowerCase","indexOf","Number","params","nodeName","path","connect","send","createRouter","routes","defaultRoute","usePlugin","loggerPlugin","browserPlugin","useHash","start","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f75a7091.chunk.js","sourcesContent":["import React from 'react'\nimport { List, Cell, PanelHeader, platform, ANDROID, HeaderButton } from '@vkontakte/vkui'\nimport '@vkontakte/vkui/dist/vkui.css'\nimport Icon24Delete from '@vkontakte/icons/dist/24/delete'\n\nclass Tasks extends React.Component {\n\trender() {\n\n        let {\n            tasks,\n            router,\n            setCurrentTaskId,\n            deleteTask,\n            removable\n        } = this.props\n\n        const osname = platform()\n\n\t\treturn (\n\t\t\t<div>\n                <PanelHeader\n\n                >\n                    Тесты\n                </PanelHeader>\n                <List style={{ paddingTop : (osname === ANDROID) ? 56 : 48 }}>\n                    {\n                        tasks.map((task, index) => (\n                            <Cell\n                                multiline\n                                expandable\n                                removable={removable}\n                                key={index}\n                                onRemove={() => deleteTask(task.id)}\n                                onClick={()=> {\n                                        setCurrentTaskId(task.id)\n                                        router.navigate('task', { id : task.id })\n                                    } \n                                }\n                            >\n                                {task.name}\n                            </Cell>\n                        ))\n                    }\n                </List>\n            </div>\n\t\t);\n\t}\n}\n\nexport default Tasks;\n","import React from 'react'\nimport { PanelHeader, FormLayout, Textarea, Input, FixedLayout, Button, Div, platform, ANDROID, FormStatus } from '@vkontakte/vkui'\nimport '@vkontakte/vkui/dist/vkui.css'\nimport PanelHeaderBack from '@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack'\nimport Icon24Done from '@vkontakte/icons/dist/24/done'\n\nclass AddTask extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tname : '',\n\t\t\ttext : '',\n\t\t\terror : false\n\t\t};\n\t}\n\n\tonClickAddTask = () => {\n\t\tlet {\n\t\t\taddTask,\n\t\t\trouter\n\t\t} = this.props\n\n\t\tlet {\n\t\t\tname,\n\t\t\ttext\n\t\t} = this.state\n\n\t\tif (name !== '' && text !== '') {\n\t\t\tthis.setState({ error : false })\n\t\t\taddTask({\n\t\t\t\tname, text\n\t\t\t})\n\t\t\trouter.navigateToDefault()\n\t\t} else {\n\t\t\tthis.setState({ error : true })\n\t\t}\n\n\t}\n\n\tonChangeNameTask = (e) => {\n\t\tconst name = e.target.value\n\t\tthis.setState({ name })\n\t}\n\n\tonChangeTextTask = (e) => {\n\t\tconst text = e.target.value\n\t\tthis.setState({ text })\n\t}\n\n\trender() {\n\n\t\tlet {\n\t\t\trouter\n\t\t} = this.props\n\n\t\tconst osname = platform()\n\n\t\treturn (\n\t\t\t<div>\n                <PanelHeader\n\t\t\t\t\tleft={\n\t\t\t\t\t\t<PanelHeaderBack\n\t\t\t\t\t\t\tonClick={()=>router.navigate('tasks')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t>\n                Добавление\n                </PanelHeader>\n                <FormLayout>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.state.error === true &&\n\t\t\t\t\t\t<FormStatus title=\"Некорректные поля\" state=\"error\">\n\t\t\t\t\t\t\tЗаполните все поля\n\t\t\t\t\t\t</FormStatus>\n\t\t\t\t\t}\n\t\t\t\t\t<Input \n\t\t\t\t\t\tonChange={this.onChangeNameTask}\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\tplaceholder='Напиши, как называется задача' \n\t\t\t\t\t/>\n\t\t\t\t\t<Textarea \n\t\t\t\t\t\tonChange={this.onChangeTextTask}\n\t\t\t\t\t\tvalue={this.state.text}\n\t\t\t\t\t\tplaceholder='Напиши, чтобы ты хотел сделать' />\n\t\t\t\t</FormLayout>\n\t\t\t\t<FixedLayout vertical='bottom'>\n\t\t\t\t\t{\n\t\t\t\t\t\tosname === ANDROID ? \n\t\t\t\t\t\t<Div style={{ float : 'right' }}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName='FixedBottomButton'\n\t\t\t\t\t\t\t\tonClick={(e) => this.onClickAddTask(e)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Icon24Done/>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tsize='xl'\n\t\t\t\t\t\t\t\tonClick={(e) => this.onClickAddTask(e)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tДобавить\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Div>\n\t\t\t\t\t}\n\t\t\t\t</FixedLayout>\n            </div>\n\t\t);\n\t}\n}\n\nexport default AddTask;\n","import React from 'react'\nimport { PanelHeader, FormLayout, Textarea, Input, FixedLayout, Button, Div, platform, ANDROID, FormStatus } from '@vkontakte/vkui'\nimport '@vkontakte/vkui/dist/vkui.css'\nimport PanelHeaderBack from '@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack'\nimport Icon24Done from '@vkontakte/icons/dist/24/done'\n\nclass EditTask extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tid : null,\n\t\t\tname : '',\n\t\t\ttext : '',\n\t\t\terror : false\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tlet {\n\t\t\ttask\n\t\t} = this.props\n\n\t\tthis.setState({ ...task })\n\t}\n\n\tonClickEditTask = () => {\n\t\tlet {\n\t\t\teditTask,\n\t\t\trouter\n\t\t} = this.props\n\n\t\tlet {\n\t\t\tid,\n\t\t\tname,\n\t\t\ttext\n\t\t} = this.state\n\n\t\tif (name !== '' && text !== '') {\n\t\t\tthis.setState({ error : false })\n\t\t\teditTask({\n\t\t\t\tid, name, text\n\t\t\t})\n\t\t\trouter.navigateToDefault()\n        } else {\n\t\t\tthis.setState({ error : true })\n\t\t}\n\n\t}\n\n\tonChangeNameTask = (e) => {\n\t\tconst name = e.target.value\n\t\tthis.setState({ name })\n\t}\n\n\tonChangeTextTask = (e) => {\n\t\tconst text = e.target.value\n\t\tthis.setState({ text })\n\t}\n\n\trender() {\n\n\t\tlet {\n\t\t\ttask,\n\t\t\trouter\n\t\t} = this.props\n\n\t\tconst osname = platform()\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\ttypeof task !== 'undefined' &&\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<PanelHeader\n\t\t\t\t\t\t\tleft={\n\t\t\t\t\t\t\t\t<PanelHeaderBack \n\t\t\t\t\t\t\t\t\tonClick={()=>router.navigate('task', { id : task.id })}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\tРедактирование\n\t\t\t\t\t\t</PanelHeader>\n\t\t\t\t\t\t<FormLayout>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.state.error === true &&\n\t\t\t\t\t\t\t\t<FormStatus title=\"Некорректные поля\" state=\"error\">\n\t\t\t\t\t\t\t\t\tЗаполните все поля\n\t\t\t\t\t\t\t\t</FormStatus>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\tonChange={this.onChangeNameTask}\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\t\t\tplaceholder='Напиши, как называется задача' \n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Textarea \n\t\t\t\t\t\t\t\tonChange={this.onChangeTextTask}\n\t\t\t\t\t\t\t\tvalue={this.state.text}\n\t\t\t\t\t\t\t\tplaceholder='Напиши, чтобы ты хотел сделать' />\n\t\t\t\t\t\t</FormLayout>\n\t\t\t\t\t\t<FixedLayout vertical='bottom'>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tosname === ANDROID ?\n\t\t\t\t\t\t\t\t<Div style={{ float : 'right' }}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tclassName='FixedBottomButton'\n\t\t\t\t\t\t\t\t\t\tonClick={() => this.onClickEditTask()}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Icon24Done/>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tsize='xl'\n\t\t\t\t\t\t\t\t\t\tonClick={() => this.onClickEditTask()}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tСохранить\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</FixedLayout>\n\t\t\t\t\t</div>\n\t\t\t\t}\n            </div>\n\t\t);\n\t}\n}\n\nexport default EditTask;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PanelHeader, Header, Div, Group } from '@vkontakte/vkui'\nimport PanelHeaderBack from '@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack'\nimport Tasks from \"./Tasks\";\n\nfunction Question(props) {\n\n\n\n    return (\n\n        <div>\n            <h2 className=\"question\">{props.content}</h2>\n        </div>\n    );\n}\n\nQuestion.propTypes = {\n    content: PropTypes.string.isRequired\n};\n\nexport default Question;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction QuestionCount(props) {\n    return (\n        <div className=\"questionCount\">\n            Question <span>{props.counter}</span> of <span>{props.total}</span>\n        </div>\n    );\n}\n\nQuestionCount.propTypes = {\n    counter: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired\n};\n\nexport default QuestionCount;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AnswerOption(props) {\n    return (\n        <li className=\"answerOption\">\n            <input\n                type=\"radio\"\n                className=\"radioCustomButton\"\n                name=\"radioGroup\"\n                checked={props.answerType === props.answer}\n                id={props.answerType}\n                value={props.answerType}\n                disabled={props.answer}\n                onChange={props.onAnswerSelected}\n            />\n            <label className=\"radioCustomLabel\" htmlFor={props.answerType}>\n                {props.answerContent}\n            </label>\n        </li>\n    );\n}\n\nAnswerOption.propTypes = {\n    answerType: PropTypes.string.isRequired,\n    answerContent: PropTypes.string.isRequired,\n    answer: PropTypes.string.isRequired,\n    onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default AnswerOption;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Question from '../components/Question';\nimport QuestionCount from '../components/QuestionCount';\nimport AnswerOption from '../components/AnswerOption';\nimport {PanelHeader} from \"@vkontakte/vkui\";\nimport PanelHeaderBack from \"@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack\";\nimport Tasks from \"./Tasks\";\n\nfunction Quiz(props) {\n    function renderAnswerOptions(key) {\n        return (\n            <AnswerOption\n                key={key.content}\n                answerContent={key.content}\n                answerType={key.type}\n                answer={props.answer}\n                questionId={props.questionId}\n                onAnswerSelected={props.onAnswerSelected}\n            />\n        );\n    }\n    const task = props.question\n    const router = props.router\n\n    return (\n\n        <div key={props.questionId}>\n            <PanelHeader\n                left={\n                    <PanelHeaderBack\n                        onClick={()=>router.navigate('quiz')}\n                    />\n                }\n            >\n                Тесты\n            </PanelHeader>\n\n            <QuestionCount counter={props.questionId} total={props.questionTotal} />\n            <Question content={props.question} />\n            <ul className=\"answerOptions\">\n                {props.answerOptions.map(renderAnswerOptions)}\n            </ul>\n        </div>\n    );\n}\n\nQuiz.propTypes = {\n    answer: PropTypes.string.isRequired,\n    answerOptions: PropTypes.array.isRequired,\n    question: PropTypes.string.isRequired,\n    questionId: PropTypes.number.isRequired,\n    questionTotal: PropTypes.number.isRequired,\n    onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default Quiz;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Result(props) {\n    return (\n\n            <div>\n                You prefer <strong>{props.quizResult}</strong>!\n            </div>\n\n    );\n}\n\nResult.propTypes = {\n    quizResult: PropTypes.string.isRequired\n};\n\nexport default Result;","import React, { Component } from 'react'\nimport { View, Panel, Search, FixedLayout, Div, Button, platform, ANDROID, Root, Radio} from '@vkontakte/vkui'\nimport '@vkontakte/vkui/dist/vkui.css'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport EditTask from './components/EditTask'\n\nimport { RouteNode } from 'react-router5'\n\n\nimport Quiz from './components/Quiz';\nimport Result from './components/Result';\nimport AnswerTest from \"./components/AnswersTest\";\n\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\ttasks : [ \n\t\t\t\t{\t\n\t\t\t\t\tid : 1,\n\t\t\t\t\tname : 'Big Five',\n\t\t\t\t\ttext : 'Определение типа личности'\n\t\t\t\t},\n\n\t\t\t],\n\t\t\tcurrentTaskId : null,\n\t\t\tsearch : '',\n\t\t\tcounter: 0,\n\t\t\tquestionId: 1,\n\t\t\tquestion: '',\n\t\t\tanswerOptions: [],\n\t\t\tanswer: '',\n\t\t\tanswersCount: {},\n\t\t\tresult: '',\n\t\t\tallquestions: [],\n\t\t\tr:'',\n\t\t}\n\t\tthis.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n\t}\n\n\tonChangeSearch = (search) => { \n\t\tthis.setState({ search })\n\t}\n\t\n\taddTask = (task) => {\n\t\ttask.id = this.state.tasks.length + 1\n\t\tthis.setState({\n\t\t\ttasks : [...this.state.tasks, task]\n\t\t})\n\t}\n\n\n\n\tsetCurrentTaskId = (currentTaskId) => this.setState({ currentTaskId })\n\n\teditTask = (newTask) => {\n\t\tlet newTasks = this.state.tasks.map((task) => {\n\t\t\tif (task.id === newTask.id) {\n\t\t\t\ttask = newTask\n\t\t\t}\n\t\t\treturn task\n\t\t})\n\t\tthis.setState({\n\t\t\ttasks : newTasks\n\t\t})\n\t}\n\n\tget tasks () {\n\t\tconst search = this.state.search.toLowerCase()\n\t\treturn this.state.tasks.filter((task) => \n\t\t\ttask.name.toLowerCase().indexOf(search) > -1 || \n\t\t\ttask.text.toLowerCase().indexOf(search) > -1)\n\t}\n\n\tget task () {\n\t\tconst id = Number(this.props.route.params.id) || this.state.currentTaskId\n\t\treturn this.state.tasks.filter((task) =>\n\t\t\ttask.id === id\n\t\t)\n\t}\n\n\n\tcomponentDidMount() {\n\t\t//const shuffledAnswerOptions = quizQuestions.map(this.shuffleArray(quizQuestions.answers)\n\t\t//);\n\t\t this.state.allquestions = [\"Я очень сильно беспокоюсь\",\n\t\t\t\"Which console would you prefer to play with friends?\",\n\t\t\t\"Which of these racing franchises would you prefer to play a game from?\",\n\t\t\t\"Which of these games do you think is best?\",\n\t\t\t\"What console would you prefer to own?\"];\n\n\t\tthis.setState({\n\t\t\tquestion: this.state.allquestions[0],\n\t\t});\n\t}\n\n\tshuffleArray(array) {\n\t\tvar currentIndex = array.length,\n\t\t\ttemporaryValue,\n\t\t\trandomIndex;\n\n\t\t// While there remain elements to shuffle...\n\t\twhile (0 !== currentIndex) {\n\t\t\t// Pick a remaining element...\n\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\t\tcurrentIndex -= 1;\n\n\t\t\t// And swap it with the current element.\n\t\t\ttemporaryValue = array[currentIndex];\n\t\t\tarray[currentIndex] = array[randomIndex];\n\t\t\tarray[randomIndex] = temporaryValue;\n\t\t}\n\n\t\treturn array;\n\t}\n\n\n\n\n\n\n\tgetResults() {\n\t\tconst answersCount = this.state.answersCount;\n\t\tconst answersCountKeys = Object.keys(answersCount);\n\t\tconst answersCountValues = answersCountKeys.map(key => answersCount[key]);\n\t\tconst maxAnswerCount = Math.max.apply(null, answersCountValues);\n\n\t\treturn answersCountKeys.filter(key => answersCount[key] === maxAnswerCount);\n\t}\n\n\tsetResults(result) {\n\t\tif (result.length === 1) {\n\t\t\tthis.setState({ result: result[0] });\n\t\t} else {\n\t\t\tthis.setState({ result: 'Undetermined' });\n\t\t}\n\t}\n\n\n\n\trenderQuiz() {\n\t\treturn (\n\t\t\t<Quiz\n\t\t\t\tanswer={this.state.answer}\n\t\t\t\tanswerOptions={this.state.answerOptions}\n\t\t\t\tquestionId={this.state.questionId}\n\t\t\t\tquestion={this.state.question}\n\t\t\t\tquestionTotal={this.state.allquestions.length}\n\t\t\t\tonAnswerSelected={this.handleAnswerSelected}\n\t\t\t/>\n\t\t);\n\t}\n\n\trenderResult() {\n\t\treturn <Result quizResult={this.state.result} />;\n\t}\n\n\tsetUserAnswer(answer) {\n\t\tthis.setState((state, props) => ({\n\t\t\tanswersCount: {\n\t\t\t\t...state.answersCount,\n\t\t\t\t[answer]: (state.answersCount[answer] || 0) + 1\n\t\t\t},\n\t\t\tanswer: answer\n\t\t}));\n\t}\n\n\n\tsetNextQuestion() {\n\t\tconst counter = this.state.counter + 1;\n\t\tconst questionId = this.state.questionId + 1;\n\n\t\tthis.setState({\n\t\t\tcounter: counter,\n\t\t\tquestionId: questionId,\n\t\t\tquestion: this.state.allquestions[counter],\n\t\t\tanswer: ''\n\t\t});\n\t}\n\thandleAnswerSelected(e) {\n\t\tthis.setUserAnswer(e.currentTarget.value);\n\t\talert(e.currentTarget.value)\n\t\tif (this.state.questionId < this.state.allquestions.length) {\n\t\t\tsetTimeout(() => this.setNextQuestion(), 300);\n\t\t} else {\n\t\t\tsetTimeout(() => this.setResults(this.getResults()), 300);\n\t\t}\n\t}\n\n\tupdateCategory = (e) => {\n\t\tif(e.target.checked) {\n\t\t\tthis.state.r = e.target.value\n\t\t\talert(this.state.r)\n\t\t}\n\n\t}\n\n\trender() {\n\t\tlet {\n\t\t\troute,\n\t\t\trouter\n\t\t} = this.props\n\n\t\tconst osname = platform()\n\t\tconst activeView = (route.name === 'add') ? 'addView' : 'tasksView'\n\t\tconst activePanel = route.name\n\n\t\treturn (\n\t\t\t<Root activeView={activeView}>\n\t\t\t\t<View activePanel={activePanel} id='tasksView'>\n\t\t\t\t\t<Panel id='tasks'>\n\t\t\t\t\t\t<FixedLayout vertical='top'>\n\t\t\t\t\t\t\t<Search value={this.state.search} onChange={this.onChangeSearch}/>\n\t\t\t\t\t\t</FixedLayout>\n\t\t\t\t\t\t<Tasks\n\t\t\t\t\t\t\trouter={router}\n\t\t\t\t\t\t\ttasks={this.tasks}\n\n\t\t\t\t\t\t\tsetCurrentTaskId={this.setCurrentTaskId}\n\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t</Panel>\n\n\t\t\t\t\t<Panel id='task'>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{this.state.result ? this.renderResult() : this.renderQuiz()}\n\t\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<Radio name=\"radio\" value=\"1\" defaultChecked onChange={this.handleAnswerSelected}>First</Radio>\n\t\t\t\t\t\t\t\t\t<Radio name=\"radio\" value=\"2\" onChange={this.handleAnswerSelected}>Second</Radio>\n\t\t\t\t\t\t\t\t\t<Radio name=\"radio\" value=\"3\" onChange={this.handleAnswerSelected}>Third (disabled)</Radio>\n\t\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Panel>\n\n\t\t\t\t\t<Panel id=\"edit\" theme=\"white\">\n\t\t\t\t\t\t<EditTask \n\t\t\t\t\t\t\trouter={router}\n\t\t\t\t\t\t\ttask={this.task[0]}\n\t\t\t\t\t\t\teditTask={this.editTask}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Panel>\n\t\t\t\t</View>\n\t\t\t\t<View activePanel={activePanel} id='addView'>\n\t\t\t\t\t<Panel id='add' theme=\"white\">\n\t\t\t\t\t\t\t<AddTask \n\t\t\t\t\t\t\t\trouter={router}\n\t\t\t\t\t\t\t\taddTask={this.addTask}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t</Panel>\n\t\t\t\t</View>\n\t\t\t</Root>\n\t\t)\n\t}\n}\n\nexport default (props) => (\n    <RouteNode nodeName=\"\">\n        {({ route }) => <App route={route} {...props}/>}\n    </RouteNode>\n)\n","export default [\n    { name: 'tasks', path: '/tasks' },\n    { name: 'task', path: '/task/:id' },\n    { name: 'edit', path: '/edit/:id' },\n    { name: 'add', path: '/add' },\n    { name: 'quiz', path: '/quiz' }\n]","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\nimport { RouterProvider } from 'react-router5'\nimport createRouter from './create-router'\n\nconnect.send('VKWebAppInit', {});\n\nconst router = createRouter()\n\nrouter.start(() => {\n    ReactDOM.render((\n        <RouterProvider router={router}>\n            <App router={router}/>\n        </RouterProvider>\n    ), document.getElementById('root'))\n})\n","import createRouter from 'router5'\nimport loggerPlugin from 'router5-plugin-logger'\nimport browserPlugin from 'router5-plugin-browser'\nimport routes from './routes'\n\nexport default function configureRouter() {\n    const router = createRouter(routes, {\n        defaultRoute: 'tasks'\n    })\n\n    router.usePlugin(loggerPlugin)\n    router.usePlugin(\n            browserPlugin({\n                useHash: true\n            })\n        )\n\n    return router\n}"],"sourceRoot":""}